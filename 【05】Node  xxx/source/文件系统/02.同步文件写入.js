/*----------------------------------------------------------
1、文件系统（File System）
	- 文件系统简单来说就是通过 Node 来操作系统中的文件;
	- 使用文件系统需要先引入 fs 模块, fs 是核心模块,直接引入不需要下载;

2、文件系统形式
（1）同步文件系统：会阻塞程序的执行,也就是除非操作完毕否则不会向下执行代码;
（2）异步文件系统：不会阻塞程序的执行,而是在操作完成时通过回调函数将结果返回;

3、同步文件的写入（没有包含异常处理）
（1）打开文件
	* 语法：var fd = fs.openSync(path, flags, mode)
			- path		要打开文件的路径
			- flags		打开文件要做的操作的类型（r 可读 / w 覆盖写 / a 追加写）
			- mode		设置文件的操作权限（一般不传）
	* 返回值：返回一个文件的描述符作为结果,可以通过该描述符来对文件进行各种操作;

（2）向文件中写入内容
	* 语法：fs.writeSync(fd, string, position, encoding)
			- fd 		写入的文件的描述符
			- string 	要写入的内容
			- position 	写入的起始位置（一般不传）
			- encoding 	写入的编码 默认UTF-8（一般不传）

（3）保存关闭文件
	* 语法：fs.closeSync(fd)
			- fd 要关闭的文件的描述符
---------------------------------------------------------------*/
var fs = require("fs");

//打开文件
var fd = fs.openSync("hello.txt", "w");
//向文件中写入内容
fs.writeSync(fd, "wyw 同步写入数据成功");
//关闭文件
fs.closeSync(fd);

console.log("程序向下执行!"); //在文件操作结束后最后执行
